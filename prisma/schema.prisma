// UPDATED PRISMA SCHEMA (schema.prisma)

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserSex {
  Male
  Female
}

model Business {
  id                   Int           @id @default(autoincrement())
  name                 String        @db.VarChar(255)
  logo                 String?       @db.VarChar(255)
  user     User?     @relation(fields: [userId], references: [id])
  userId   String?   @unique
  ageOfOwner           Int?
  genderOfOwner        UserSex
  email                String?       @db.VarChar(255)
  phone                String?       @db.VarChar(255)
  businessAddress      String        @db.Text
  coreProductOrService String        @db.Text
  description          String        @db.Text
  disabilityInclusion  String?       @db.VarChar(100)
  registrationStatus   String?       @db.VarChar(100)
  revenueBracket       String?       @db.VarChar(100)
  yearsInOperation     DateTime?     @default(now())
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt

  // Relations
  sector               Sector?       @relation(fields: [sectorId], references: [id])
  sectorId             Int?
  workforce            Workforce?
  socialMedia          SocialMedia?
  announcement         Announcement[]
 
 
 

}

model Sector {
  id         Int        @id @default(autoincrement())
  name       String     @unique
  businesses Business[]
  events Event[]
  announcement Announcement[]

}

model Workforce {
  id         Int        @id @default(autoincrement())
  male       Int
  female     Int
  total      Int
  business   Business   @relation(fields: [businessId], references: [id])
  businessId Int        @unique
}

model SocialMedia {
  id         Int        @id @default(autoincrement())
  facebook   String?    @db.Text
  twitter    String?    @db.Text
  instagram  String?    @db.Text
  tiktok     String?    @db.Text
  youtube    String?    @db.Text
  business   Business   @relation(fields: [businessId], references: [id])
  businessId Int        @unique
}



model Event {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  startTime   DateTime
  endTime     DateTime

  sectorId Int?
  sector   Sector? @relation(fields: [sectorId], references: [id])
}


model Announcement {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  date        DateTime

  // Optional relation to Sector
  sectorId    Int?
  sector      Sector?   @relation(fields: [sectorId], references: [id])

  // Optional relation to Business
  businessId  Int?
  business    Business? @relation(fields: [businessId], references: [id])
}


model User {
  id          String        @unique
  username    String?       @unique
  firstname   String?
  lastname    String?
  email       String       @unique
  phone       String?      
  address     String?
  img         String?
  sex         UserSex?
  createdAt   DateTime     @default(now())
  birthday    DateTime?
  role        String

 business   Business?  @relation 
  
}